name: Terraform Plan and Apply (with Cost Estimation & S3 Backend)

on:
  push:
    branches:
      - main

jobs:
  plan:
    name: Terraform Plan (Dev)
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      BUCKET_NAME: terraform-state-pratyushaa-ebs-w-hy

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create Backend S3 Bucket if not exists
        run: |
          if ! aws s3api head-bucket --bucket $BUCKET_NAME 2>/dev/null; then
            echo "Creating backend S3 bucket..."
            CREATE_ARGS="--bucket $BUCKET_NAME --region us-east-1"
            if [ "us-east-1" != "us-east-1" ]; then
              CREATE_ARGS="$CREATE_ARGS --create-bucket-configuration LocationConstraint=us-east-1"
            fi
            aws s3api create-bucket $CREATE_ARGS

            aws s3api put-bucket-versioning \
              --bucket $BUCKET_NAME \
              --versioning-configuration Status=Enabled

            aws s3api put-bucket-encryption \
              --bucket $BUCKET_NAME \
              --server-side-encryption-configuration '{
                "Rules": [
                  {
                    "ApplyServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }'
          else
            echo "âœ… S3 backend bucket already exists."
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var-file="environments/dev.tfvars" -out=tfplan

      - name: Generate Plan JSON
        run: terraform show -json tfplan > plan.json

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: Setup Infracost
        uses: infracost/actions/setup@v2.1.0
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Run Infracost Breakdown
        run: |
          infracost breakdown \
            --path=plan.json \
            --format=table \
            --out-file=infracost-report.txt

      - name: Upload Infracost Report artifact
        uses: actions/upload-artifact@v4
        with:
          name: infracost-report
          path: infracost-report.txt

      - name: Show Infracost report saved info
        run: |
          echo "INFO: Infracost cost breakdown report:"
          cat infracost-report.txt

  apply:
    name: Terraform Apply (Manual Approval)
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: dev-approval

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Apply
        run: terraform apply tfplan
